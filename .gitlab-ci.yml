cache:
    key: '${CI_COMMIT_REF_SLUG}-client'
    paths:
        - client/node_modules/
        # - server/node_modules/
    policy: pull

.only-client: &only-client
    only:
        refs:
            - master
            - merge_requests
        changes:
            - client/**/*
    cache:
        key: '${CI_COMMIT_REF_SLUG}-client'
        paths:
            - client/node_modules/
        policy: pull



stages:
  - install
  - lint
  - build
  - test
  - deploy

.common_script: &common_script
  allow_failure: true
  script:
    - 'echo "Running job: $CI_JOB_NAME in stage: $CI_JOB_STAGE"'

# client_config: &client_config
#   <<: *common_script
#   image: node:latest
#   cache:
#     key: "${CI_COMMIT_REF_SLUG}-client"
#     paths:
#       - client/node_modules/


server_config: &server_config
  <<: *common_script
  image: python:3.11

ai_config: &ai_config
  <<: *common_script
  image: python:latest

# install:client:
#   stage: install
#   <<: *client_config
#   script:
#     - cd Frontend/
#     - npm ci --cache .npm --prefer-offline
#   cache:
#     key: '${CI_COMMIT_REF_SLUG}-client'
#     paths:
#       - client/node_modules/
#       - client/.npm/
#     policy: pull-push

install:client:
    stage: install
    <<: *only-client
    script:
        - cd client
        - npm ci --cache .npm --prefer-offline
    cache:
        key: '${CI_COMMIT_REF_SLUG}-client'
        paths:
            - client/node_modules/
            - client/.npm/
        policy: pull-push


install:server:
  stage: install
  <<: *server_config
  script:
    - cd Backend/Server/src/
    - pip install -r requirements.txt

install:ai:
  stage: install
  <<: *ai_config
  script:
    - cd Backend/AI/
    - echo "This job installs the required packages for the ai model"

# lint:client:
#   stage: lint
#   <<: *client_config
#   script:
#     - cd Frontend/
#     - npm run lint

lint:client:
    stage: lint
    allow_failure: true
    <<: *only-client
    script:
        - cd client
        - npm run lint


lint:server:
  stage: lint
  <<: *server_config
  script:
    - cd Backend/Server/src/
    - python -m pip install flake8
    - flake8 src

lint:ai:
  stage: lint
  <<: *ai_config
  script:
    - cd Backend/AI/
    - python -m pip install flake8
    - flake8 .

build:client:
  stage: build
  <<: *client_config
  script:
    - cd Frontend/
    - npm run build
  artifacts:
    paths:
      - client/dist/

build:server:
  stage: build
  <<: *server_config
  script:
    - cd Backend/Server/src/
    - echo "This job builds the server"

build:ai:
  stage: build
  <<: *ai_config
  script:
    - cd Backend/AI/
    - echo "This job builds the ai model"

test:client:
  stage: test
  <<: *client_config
  script:
    - cd Frontend/
    - npm run test

test:server:
  stage: test
  <<: *server_config
  script:
    - cd Backend/Server/src/
    - echo "This job tests the server"

test:ai:
  stage: test
  <<: *ai_config
  script:
    - cd Backend/AI/
    - echo "This job tests the ai model"

deploy:client:
  stage: deploy
  <<: *client_config
  script:
    - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
  environment: production

deploy:server:
  stage: deploy
  <<: *server_config
  script:
    - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
  environment: production
